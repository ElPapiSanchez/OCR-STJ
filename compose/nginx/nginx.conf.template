events {
    worker_connections  1024;  # Default: 1024
}

http {
    server {
        listen 80;
        include /etc/nginx/mime.types;

        location / {
            root /usr/share/nginx/html/;
            try_files $uri $uri/ /index.html;
        }

        # Don't serve the shared folder directly
        location /files/ {
            return 404;
        }

        location /api/ {
            proxy_pass http://server:5001/;
            proxy_read_timeout 1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout 1800;
            send_timeout 1800;
            client_max_body_size $CLIENT_MAX_BODY_SIZE;
        }

        location /flower/ {
            proxy_pass http://flower:5050/flower/;
            proxy_read_timeout 1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout 1800;
            send_timeout 1800;
            client_max_body_size $CLIENT_MAX_BODY_SIZE;
        }

        location /images/ {
            alias /usr/share/nginx/html/files/;

            # Don't serve private session images through this location
            location ~* /images/_private_sessions/.* {
                return 404;
            }

            # Serve only extensions that may be stored as document pages, from "_pages" folders
            location ~* /_pages/.+\.(jpg|jpeg|jfif|pjpeg|pjp|png|tif|tiff|bmp|gif|webp|pnm|jp2)$ {
                try_files $uri =404;
            }
            return 404;
        }

        location /private/ {  # TODO: secure private session images
            alias /usr/share/nginx/html/files/_private_sessions/;

            # Serve only extensions that may be stored as document pages, from "_pages" folders
            location ~* /_pages/.+\.(jpg|jpeg|jfif|pjpeg|pjp|png|tif|tiff|bmp|gif|webp|pnm|jp2)$ {
                try_files $uri =404;
            }
            return 404;
        }
    }
}
