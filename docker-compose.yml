version: '3.9'

volumes:
  files_data: {}

services:
  server:
    build:
      context: ./server
      dockerfile: ../compose/server/Dockerfile
    environment:
      FLASK_APP: app
      FLASK_ENV: development
      FLASK_DEBUG: 1
      ES_URL: http://elasticsearch:9200
    command: /app/start
    ports:
      - "5001:5001"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - files_data:/app/files
    restart: unless-stopped

  celery_worker:
    build:
      context: ./server
      dockerfile: ../compose/server/Dockerfile
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      C_FORCE_ROOT: true
    command: celery -A celery_app.celery worker --loglevel=info --without-gossip --without-mingle --without-heartbeat -Ofair --concurrency=8 -P eventlet
    volumes:
      - files_data:/app/files
    links:
      - redis
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 15
      start_period: 10s
    volumes:
      - files_data:/app/files
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - server
    volumes:
      - files_data:/usr/share/nginx/html/files
    environment:
      PUBLIC_URL: /ocr/
      REACT_APP_API_URL: ./api/
    restart: unless-stopped
